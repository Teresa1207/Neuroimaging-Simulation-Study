mP = rep(unlist(lapply(medPaths,function(x){rep(x,4)})),8)
tP = rep(c('mean','se','LCI','UCI'),8*length(medPaths))
dataSum1 = function(dt,med){
dt[,unlist(lapply(.SD, medSum)), .SDcols = med,by = .(Atrophy,Cog,DX)]
}
dataSum2 = function(dt,med){
dtNew = dataSum1(dt,med)
dtNew[,MedPath:=mP][,Type:=tP]
dcast(dtNew,Atrophy+Cog + DX + MedPath ~ Type, value.var = "V1")
}
for(i in 1:length(temp1)){assign(paste('sum',i,sep = ''),dataSum2(data.table(temp1[[i]]),medPaths))}
totalSum <- do.call(rbind, lapply(paste0("sum", 1:length(temp1)), get))
mPnames = data.frame(med = medPaths,
Paths = c('Abeta to Tau','Tau to Atrophy','Atrophy to Cog','Abeta to Cog','Abeta to Atrophy','Tau to Cog','Abeta to Tau to Atrophy',
'Tau to Atrophy to Cog',
'B2 = Abeta to Tau to Atrophy to Cog',
'B1 = Abeta to Tau to Cog',
'B3 = Abeta to Atrophy to Cog',
'C1 = ab2-abc',
'C2 = ab2-a2c',
'C3 = abc-a2c',
'dPrime = abc+a2c+ab2'))
totalSum = merge(totalSum, mPnames,by.x = 'MedPath',by.y = 'med')
totalSum$Sig = ifelse(sign(totalSum$LCI)==sign(totalSum$UCI),"1","0")
totalSum$Sig = factor(totalSum$Sig)
totalSum$MedPath = factor(totalSum$MedPath)
totalDF = data.frame(totalSum)
totalDF = totalDF[,c(2:4,1,9,10,5,8,6,7)]
totalSumDT = datatable(totalDF,filter = 'top',
options = list(pageLength = 50,autoWidth = TRUE
#columnDefs = list(list(visible=FALSE, targets=c(5:6)))
),
caption = 'Table 1: This table summarizes results of 1000 bootstrapped samples by Atrophy, Cognitive Measure, Diagnosistic Category and Mediation Path (medPath).
mean = average of 1000 estimates, se = standard error of 1000 estimates, Sig = 1: the value 0 was not in the 95% Conf band, 0: the value zero was in the 95%CI band'
)
totalSumDT
write.csv(totalDF,file = 'resultsSum.csv')
tr = read.csv('resultsSum.csv')
### OUTPUT TABLES
### Normals
### EMCI
### LMCI
### TOTAL
sumFunc = function(beta,mem){
sdf = subset(totalDF,MedPath==beta&Cog==mem)
ddply(sdf, .(DX,Atrophy),summarize,
Path = MedPath,
cog = Cog,
Beta = mean,
CI = paste('[',LCI,',',UCI,']',sep = ''),
sig = Sig
)
}
View(dt1)
mpaths = c('ab2','a2c','abc')
dpaths = c('a2','d','a','dP','dPrime')
cogpaths = c('ADNI_MEM','ADNI_EF')
Fig34 = lapply(cogpaths,
function(i){
lapply(mpaths,function(x){sumFunc(x,i)})})
function (X, by, FUN, ..., stat.name = deparse(substitute(X)),
type = c("variables", "matrix"), subset = TRUE, keepcolnames = FALSE)
mpaths = c('ab2','a2c','abc')
dpaths = c('a2','d','a','dP','dPrime')
cogpaths = c('ADNI_MEM','ADNI_EF')
Fig34 = lapply(cogpaths,
function(i){
lapply(mpaths,function(x){sumFunc(x,i)})})
sumFunc = function(beta,mem){
sdf = subset(totalDF,MedPath==beta&Cog==mem)
ddply(sdf, .(DX,Atrophy),summarize,
Path = MedPath,
cog = Cog,
Beta = mean,
CI = paste('[',LCI,',',UCI,']',sep = ''),
sig = Sig
)
}
mpaths = c('ab2','a2c','abc')
dpaths = c('a2','d','a','dP','dPrime')
cogpaths = c('ADNI_MEM','ADNI_EF')
Fig34 = lapply(cogpaths,
function(i){
lapply(mpaths,function(x){sumFunc(x,i)})})
setwd("~/Documents/Davis 2016-2017/ADC_Evan/R_RESULTS2")
library(DT)
library(data.table)
temp = list.files(pattern="*.RDA")
filenames <- list.files(pattern="*.RDA")
ldf <- lapply(filenames, readRDS)
res <- lapply(ldf, function(r){
rbind(data.frame(r$ResultsBoot[[1]][[1]][[1]]),
data.frame(r$ResultsBoot[[1]][[1]][[2]]),
data.frame(r$ResultsBoot[[1]][[1]][[3]]),
data.frame(r$ResultsBoot[[1]][[1]][[4]]),
data.frame(r$ResultsBoot[[1]][[2]][[1]]),
data.frame(r$ResultsBoot[[1]][[2]][[2]]),
data.frame(r$ResultsBoot[[1]][[2]][[3]]),
data.frame(r$ResultsBoot[[1]][[2]][[4]]))
})
for(i in 1:length(temp)){assign(paste('dt',i,sep = ''),data.table(data.frame(res[i])))}
temp1 = lapply(paste0("dt", 1:length(temp)),get)
for (i in 1:length(temp1)) {
# read data:
sample <- data.frame(temp1[i])
sample$C1 = with(sample, ab2-abc)
sample$C2 = with(sample, ab2-a2c)
sample$C3 = with(sample, abc-a2c)
sample$dPrime = with(sample, d - (abc+a2c+ab2))
assign(paste('dt',i,sep = ''),sample)
}
temp1 = lapply(paste0("dt", 1:length(temp)),get)
medSum = function(x){list(mean = round(mean(x),6),
se = round(sd(x),6),
LCI = round(quantile(x,.025),6),
UCI = round(quantile(x,.975),6))}
medPaths =c('a','b','c','d','dP','a2','b2','ab','bc','abc','ab2','a2c',
'C1','C2','C3','dPrime')
mP = rep(unlist(lapply(medPaths,function(x){rep(x,4)})),8)
tP = rep(c('mean','se','LCI','UCI'),8*length(medPaths))
dataSum1 = function(dt,med){
dt[,unlist(lapply(.SD, medSum)), .SDcols = med,by = .(Atrophy,Cog,DX)]
}
dataSum2 = function(dt,med){
dtNew = dataSum1(dt,med)
dtNew[,MedPath:=mP][,Type:=tP]
dcast(dtNew,Atrophy+Cog + DX + MedPath ~ Type, value.var = "V1")
}
for(i in 1:length(temp1)){assign(paste('sum',i,sep = ''),dataSum2(data.table(temp1[[i]]),medPaths))}
totalSum <- do.call(rbind, lapply(paste0("sum", 1:length(temp1)), get))
mPnames = data.frame(med = medPaths,
totalSum <- do.call(rbind, lapply(paste0("sum", 1:length(temp1)), get))
mPnames = data.frame(med = medPaths,
Paths = c('Abeta to Tau','Tau to Atrophy','Atrophy to Cog','Abeta to Cog','dP = Abeta to Cog,withControls','Abeta to Atrophy','Tau to Cog','Abeta to Tau to Atrophy',
'Tau to Atrophy to Cog',
'B2 = Abeta to Tau to Atrophy to Cog',
'B1 = Abeta to Tau to Cog',
'B3 = Abeta to Atrophy to Cog',
'C1 = ab2-abc',
'C2 = ab2-a2c',
'C3 = abc-a2c',
'dPrime = d-(abc+a2c+ab2)'))
totalSum = merge(totalSum, mPnames,by.x = 'MedPath',by.y = 'med')
totalSum <- do.call(rbind, lapply(paste0("sum", 1:length(temp1)), get))
medPaths
Paths = c('Abeta to Tau','Tau to Atrophy','Atrophy to Cog',
'Abeta to Cog','dP = Abeta to Cog',
'Abeta to Atrophy','Tau to Cog','Abeta to Tau to Atrophy',
'Tau to Atrophy to Cog',
'B2 = Abeta to Tau to Atrophy to Cog',
'B1 = Abeta to Tau to Cog',
'B3 = Abeta to Atrophy to Cog',
'C1 = ab2-abc',
'C2 = ab2-a2c',
'C3 = abc-a2c',
'dPrime = d-(abc+a2c+ab2)')
lengths(Paths)
length(Paths)
length(medPaths)
mPnames = data.frame(med = medPaths,
Paths = c('Abeta to Tau','Tau to Atrophy','Atrophy to Cog',
'Abeta to Cog','dP = Abeta to Cog',
'Abeta to Atrophy','Tau to Cog','Abeta to Tau to Atrophy',
'Tau to Atrophy to Cog',
'B2 = Abeta to Tau to Atrophy to Cog',
'B1 = Abeta to Tau to Cog',
'B3 = Abeta to Atrophy to Cog',
'C1 = ab2-abc',
'C2 = ab2-a2c',
'C3 = abc-a2c',
'dPrime = d-(abc+a2c+ab2)'))
totalSum = merge(totalSum, mPnames,by.x = 'MedPath',by.y = 'med')
View(totalSum)
totalSum$Sig = ifelse(sign(totalSum$LCI)==sign(totalSum$UCI),"1","0")
totalSum$Sig = factor(totalSum$Sig)
totalSum$MedPath = factor(totalSum$MedPath)
totalDF = data.frame(totalSum)
totalDF = totalDF[,c(2:4,1,9,10,5,8,6,7)]
totalSumDT = datatable(totalDF,filter = 'top',
options = list(pageLength = 50,autoWidth = TRUE
#columnDefs = list(list(visible=FALSE, targets=c(5:6)))
),
caption = 'Table 1: This table summarizes results of 1000 bootstrapped samples by Atrophy, Cognitive Measure, Diagnosistic Category and Mediation Path (medPath).
mean = average of 1000 estimates, se = standard error of 1000 estimates, Sig = 1: the value 0 was not in the 95% Conf band, 0: the value zero was in the 95%CI band'
)
totalSumDT
## Server File
server = data.frame(at = 1:11,atrophy = c("Atrophy_Amygdala","Atrophy_Entorhinal","Atrophy_Hippocampus",
"Atrophy_Insula","Atrophy_LateralTemporal", "Atrophy_MediatTemporal",
"Atrophy_ParahippoGyrus","Atrophy_PostCingulate", "Atrophy_SLF_PT","Atrophy_Splenium","Atrophy_Thalamus"),
server = c('gumbel','gumbel','hilbert','phall','fingers',
'pearson','pearson','phall','gumbel','hilbert','phall'))
server2 = data.frame(at = 1:11,atrophy = c("Atrophy_Amygdala","Atrophy_Entorhinal","Atrophy_Hippocampus",
"Atrophy_Insula","Atrophy_LateralTemporal", "Atrophy_MediatTemporal",
"Atrophy_ParahippoGyrus","Atrophy_PostCingulate", "Atrophy_SLF_PT","Atrophy_Splenium","Atrophy_Thalamus"),
server = c('gcox','gcox','gumbel','gumbel','hilbert','hilbert','phall','phall',
'poisson','poisson','pearson'))
View(server2)
#########################################
setwd("~/Documents/Davis 2016-2017/ADC_Evan/R_RESULTS2")
library(DT)
library(data.table)
temp = list.files(pattern="*.RDA")
filenames <- list.files(pattern="*.RDA")
ldf <- lapply(filenames, readRDS)
res <- lapply(ldf, function(r){
rbind(data.frame(r$ResultsBoot[[1]][[1]][[1]]),
data.frame(r$ResultsBoot[[1]][[1]][[2]]),
data.frame(r$ResultsBoot[[1]][[1]][[3]]),
data.frame(r$ResultsBoot[[1]][[1]][[4]]),
data.frame(r$ResultsBoot[[1]][[2]][[1]]),
data.frame(r$ResultsBoot[[1]][[2]][[2]]),
data.frame(r$ResultsBoot[[1]][[2]][[3]]),
data.frame(r$ResultsBoot[[1]][[2]][[4]]))
})
for(i in 1:length(temp)){assign(paste('dt',i,sep = ''),data.table(data.frame(res[i])))}
temp1 = lapply(paste0("dt", 1:length(temp)),get)
for (i in 1:length(temp1)) {
# read data:
sample <- data.frame(temp1[i])
sample$C1 = with(sample, ab2-abc)
sample$C2 = with(sample, ab2-a2c)
sample$C3 = with(sample, abc-a2c)
sample$dPrime = with(sample, d - (abc+a2c+ab2))
assign(paste('dt',i,sep = ''),sample)
}
temp1 = lapply(paste0("dt", 1:length(temp)),get)
medSum = function(x){list(mean = round(mean(x),6),
se = round(sd(x),6),
LCI = round(quantile(x,.025),6),
UCI = round(quantile(x,.975),6))}
medPaths =c('a','b','c','d','dP','a2','b2','ab','bc','abc','ab2','a2c',
'C1','C2','C3','dPrime')
mP = rep(unlist(lapply(medPaths,function(x){rep(x,4)})),8)
tP = rep(c('mean','se','LCI','UCI'),8*length(medPaths))
dataSum1 = function(dt,med){
dt[,unlist(lapply(.SD, medSum)), .SDcols = med,by = .(Atrophy,Cog,DX)]
}
dataSum2 = function(dt,med){
dtNew = dataSum1(dt,med)
dtNew[,MedPath:=mP][,Type:=tP]
dcast(dtNew,Atrophy+Cog + DX + MedPath ~ Type, value.var = "V1")
}
for(i in 1:length(temp1)){assign(paste('sum',i,sep = ''),dataSum2(data.table(temp1[[i]]),medPaths))}
totalSum <- do.call(rbind, lapply(paste0("sum", 1:length(temp1)), get))
mPnames = data.frame(med = medPaths,
Paths = c('Abeta to Tau','Tau to Atrophy','Atrophy to Cog',
'Abeta to Cog','dP = Abeta to Cog',
'Abeta to Atrophy','Tau to Cog','Abeta to Tau to Atrophy',
'Tau to Atrophy to Cog',
'B2 = Abeta to Tau to Atrophy to Cog',
'B1 = Abeta to Tau to Cog',
'B3 = Abeta to Atrophy to Cog',
'C1 = ab2-abc',
'C2 = ab2-a2c',
'C3 = abc-a2c',
'dPrime = d-(abc+a2c+ab2)'))
totalSum = merge(totalSum, mPnames,by.x = 'MedPath',by.y = 'med')
totalSum$Sig = ifelse(sign(totalSum$LCI)==sign(totalSum$UCI),"1","0")
totalSum$Sig = factor(totalSum$Sig)
totalSum$MedPath = factor(totalSum$MedPath)
totalDF = data.frame(totalSum)
View(totalDF)
totalDF = totalDF[,c(2:4,1,9,10,5,8,6,7)]
View(totalDF)
totalDF = data.frame(totalSum)
View(totalDF)
totalDF = data.frame(totalSum)
totalDF = totalDF[,c(2:4,1,9,10,5:8)]
View(totalDF)
totalSumDT = datatable(totalDF,filter = 'top',
options = list(pageLength = 50,autoWidth = TRUE
#columnDefs = list(list(visible=FALSE, targets=c(5:6)))
),
caption = 'Table 1: This table summarizes results of 1000 bootstrapped samples by Atrophy, Cognitive Measure, Diagnosistic Category and Mediation Path (medPath).
mean = average of 1000 estimates, se = standard error of 1000 estimates, Sig = 1: the value 0 was not in the 95% Conf band, 0: the value zero was in the 95%CI band'
)
totalSumDT
write.csv(totalDF,file = 'resultsSum.csv')
tr = read.csv('resultsSum.csv')
sumFunc = function(beta,mem){
sdf = subset(totalDF,MedPath==beta&Cog==mem)
ddply(sdf, .(DX,Atrophy),summarize,
Path = MedPath,
cog = Cog,
Beta = mean,
CI = paste('[',LCI,',',UCI,']',sep = ''),
sig = Sig
)
}
mpaths = c('ab2','a2c','abc')
dpaths = c('a2','d','a','dP','dPrime')
cogpaths = c('ADNI_MEM','ADNI_EF')
Fig34 = lapply(cogpaths,
function(i){
lapply(mpaths,function(x){sumFunc(x,i)})})
for(i in 1:length(cogpaths)){
for(j in 1:length(mpaths)){
sample = data.frame(Fig34[[i]][[j]])
EMCI = subset(sample,DX=='EMCI')
colnames(EMCI)[which(colnames(EMCI)=="Beta")] = if(unique(EMCI$Path)=='ab2'){'B1'}else{if(unique(EMCI$Path)=='abc'){'B2'}else{'B3'}}
EMCI$Atrophy = gsub("^.*?_","",EMCI$Atrophy)
LMCI = subset(sample,DX=='LMCI')
colnames(LMCI)[which(colnames(LMCI)=="Beta")] = if(unique(LMCI$Path)=='ab2'){'B1'}else{if(unique(LMCI$Path)=='abc'){'B2'}else{'B3'}}
LMCI$Atrophy = gsub("^.*?_","",LMCI$Atrophy)
TOTAL = subset(sample,DX=='TOTAL')
colnames(TOTAL)[which(colnames(TOTAL)=="Beta")] = if(unique(TOTAL$Path)=='ab2'){'B1'}else{if(unique(TOTAL$Path)=='abc'){'B2'}else{'B3'}}
TOTAL$Atrophy = gsub("^.*?_","",TOTAL$Atrophy)
assign(paste('EMCI',cogpaths[i],mpaths[j],sep = '_'),EMCI)
assign(paste('LMCI',cogpaths[i],mpaths[j],sep = '_'),LMCI)
assign(paste('TOTAL',cogpaths[i],mpaths[j],sep = '_'),TOTAL)
}}
sumFunc('ab2','ADNI_MEM')
beta = 'ab'
beta = 'ab2'
mem= "ADNI_MEM"
sdf = subset(totalDF,MedPath==beta&Cog==mem)
View(sdf)
View(sdf)
ddply(sdf, .(DX,Atrophy),summarize,
Path = MedPath,
cog = Cog,
Beta = mean,
CI = paste('[',LCI,',',UCI,']',sep = ''),
sig = Sig
)
library(plyr)
ddply(sdf, .(DX,Atrophy),summarize,
Path = MedPath,
cog = Cog,
Beta = mean,
CI = paste('[',LCI,',',UCI,']',sep = ''),
sig = Sig
)
ddply(sdf, .(DX,Atrophy),summarise,
Path = MedPath,
cog = Cog,
Beta = mean,
CI = paste('[',LCI,',',UCI,']',sep = ''),
sig = Sig
)
sumFunc = function(beta,mem){
sdf = subset(totalDF,MedPath==beta&Cog==mem)
ddply(sdf, .(DX,Atrophy),summarise,
Path = MedPath,
cog = Cog,
Beta = mean,
CI = paste('[',LCI,',',UCI,']',sep = ''),
sig = Sig
)
}
mpaths = c('ab2','a2c','abc')
dpaths = c('a2','d','a','dP','dPrime')
cogpaths = c('ADNI_MEM','ADNI_EF')
Fig34 = lapply(cogpaths,
function(i){
lapply(mpaths,function(x){sumFunc(x,i)})})
for(i in 1:length(cogpaths)){
for(j in 1:length(mpaths)){
sample = data.frame(Fig34[[i]][[j]])
EMCI = subset(sample,DX=='EMCI')
colnames(EMCI)[which(colnames(EMCI)=="Beta")] = if(unique(EMCI$Path)=='ab2'){'B1'}else{if(unique(EMCI$Path)=='abc'){'B2'}else{'B3'}}
EMCI$Atrophy = gsub("^.*?_","",EMCI$Atrophy)
LMCI = subset(sample,DX=='LMCI')
colnames(LMCI)[which(colnames(LMCI)=="Beta")] = if(unique(LMCI$Path)=='ab2'){'B1'}else{if(unique(LMCI$Path)=='abc'){'B2'}else{'B3'}}
LMCI$Atrophy = gsub("^.*?_","",LMCI$Atrophy)
TOTAL = subset(sample,DX=='TOTAL')
colnames(TOTAL)[which(colnames(TOTAL)=="Beta")] = if(unique(TOTAL$Path)=='ab2'){'B1'}else{if(unique(TOTAL$Path)=='abc'){'B2'}else{'B3'}}
TOTAL$Atrophy = gsub("^.*?_","",TOTAL$Atrophy)
assign(paste('EMCI',cogpaths[i],mpaths[j],sep = '_'),EMCI)
assign(paste('LMCI',cogpaths[i],mpaths[j],sep = '_'),LMCI)
assign(paste('TOTAL',cogpaths[i],mpaths[j],sep = '_'),TOTAL)
}}
Fig2 =lapply(cogpaths,
function(i){
lapply(dpaths,function(x){sumFunc(x,i)})})
Fig2[[1]]
View(Fig2[[1]])
View(Fig2[[1]][[1]])
options(scipen=999)
sumFunc = function(beta,mem){
sdf = subset(totalDF,MedPath==beta&Cog==mem)
ddply(sdf, .(DX,Atrophy),summarise,
Path = MedPath,
cog = Cog,
Beta = mean,
CI = paste('[',LCI,',',UCI,']',sep = ''),
sig = Sig
)
}
mpaths = c('ab2','a2c','abc')
dpaths = c('a2','d','a','dP','dPrime')
cogpaths = c('ADNI_MEM','ADNI_EF')
Fig34 = lapply(cogpaths,
function(i){
lapply(mpaths,function(x){sumFunc(x,i)})})
for(i in 1:length(cogpaths)){
for(j in 1:length(mpaths)){
sample = data.frame(Fig34[[i]][[j]])
EMCI = subset(sample,DX=='EMCI')
colnames(EMCI)[which(colnames(EMCI)=="Beta")] = if(unique(EMCI$Path)=='ab2'){'B1'}else{if(unique(EMCI$Path)=='abc'){'B2'}else{'B3'}}
EMCI$Atrophy = gsub("^.*?_","",EMCI$Atrophy)
LMCI = subset(sample,DX=='LMCI')
colnames(LMCI)[which(colnames(LMCI)=="Beta")] = if(unique(LMCI$Path)=='ab2'){'B1'}else{if(unique(LMCI$Path)=='abc'){'B2'}else{'B3'}}
LMCI$Atrophy = gsub("^.*?_","",LMCI$Atrophy)
TOTAL = subset(sample,DX=='TOTAL')
colnames(TOTAL)[which(colnames(TOTAL)=="Beta")] = if(unique(TOTAL$Path)=='ab2'){'B1'}else{if(unique(TOTAL$Path)=='abc'){'B2'}else{'B3'}}
TOTAL$Atrophy = gsub("^.*?_","",TOTAL$Atrophy)
assign(paste('EMCI',cogpaths[i],mpaths[j],sep = '_'),EMCI)
assign(paste('LMCI',cogpaths[i],mpaths[j],sep = '_'),LMCI)
assign(paste('TOTAL',cogpaths[i],mpaths[j],sep = '_'),TOTAL)
}}
Fig2 =lapply(cogpaths,
function(i){
lapply(dpaths,function(x){sumFunc(x,i)})})
View(Fig2[[1]][[1]])
for(i in 1:length(cogpaths)){
for(j in 1:length(dpaths)){
sample = data.frame(Fig2[[i]][[j]])
NL = subset(sample,DX=='NL')
NL$Atrophy = gsub("^.*?_","",NL$Atrophy)
assign(paste('NL',cogpaths[i],dpaths[j],sep = '_'),NL)
}}
fig2 = rbind(data.frame(NL_ADNI_EF_a2[,c("Beta","CI",'sig')]),
data.frame(NL_ADNI_EF_d[1,c("Beta","CI",'sig')]),
data.frame(NL_ADNI_MEM_d[1,c("Beta","CI",'sig')]),
data.frame(NL_ADNI_EF_a[1,c("Beta","CI",'sig')]))
rownames(fig2) = c(NL_ADNI_EF_a2$Atrophy,c('EF',"MEM",'Tau'))
fig2
View(fig2)
fig2 = rbind(data.frame(NL_ADNI_EF_a2[,c("Beta","CI",'sig')]),
data.frame(NL_ADNI_EF_d[1,c("Beta","CI",'sig')]),
data.frame(NL_ADNI_MEM_d[1,c("Beta","CI",'sig')]),
data.frame(NL_ADNI_MEM_dP[1,c("Beta","CI",'sig')]),
data.frame(NL_ADNI_EF_dP[1,c("Beta","CI",'sig')]),
data.frame(NL_ADNI_EF_a[1,c("Beta","CI",'sig')]))
rownames(fig2) = c(NL_ADNI_EF_a2$Atrophy,c('d-EF',"d-MEM",'dP-EF',"dP-MEM",'Tau'))
View(fig2)
fig2 = rbind(data.frame(NL_ADNI_EF_a2[,c("Beta","CI",'sig')]),
data.frame(NL_ADNI_EF_d[1,c("Beta","CI",'sig')]),
data.frame(NL_ADNI_MEM_d[1,c("Beta","CI",'sig')]),
data.frame(NL_ADNI_EF_dP[1,c("Beta","CI",'sig')]),
data.frame(NL_ADNI_MEM_dP[1,c("Beta","CI",'sig')]),
data.frame(NL_ADNI_EF_dPrime[1,c("Beta","CI",'sig')]),
data.frame(NL_ADNI_MEM_dPrime[1,c("Beta","CI",'sig')]),
data.frame(NL_ADNI_EF_a[1,c("Beta","CI",'sig')]))
rownames(fig2) = c(NL_ADNI_EF_a2$Atrophy,c('d-EF',"d-MEM",
'dP-EF',"dP-MEM",
'dPr-EF',"dPr-MEM",
'Tau'))
View(fig2)
fig3EF = cbind(data.frame(EMCI_ADNI_EF_abc[,c("B2","CI",'sig','Atrophy')]),
data.frame(EMCI_ADNI_EF_a2c[,c("B3","CI",'sig')]))
View(fig3EF)
fig3MEM = cbind(data.frame(EMCI_ADNI_MEM_abc[,c("B2","CI",'sig','Atrophy')]),
data.frame(EMCI_ADNI_MEM_a2c[,c("B3","CI",'sig')]))
View(fig3MEM)
View(dt2)
View(dt3)
View(subset(dt3,DX=='EMCI'&Cog=='ADNI_EF'))
t1 = subset(dt3,DX=='EMCI'&Cog=='ADNI_EF')
mean(t1$a2c)
sd(t1$a2c)
quantile(t1$a2c,c(.025,.0975))
quantile(t1$a2c,c(.025,.975))
data(MU284)
N<-nrow(MU284)
N
n<-20
k<-ceiling(N/n)
k
r<-sample(k,1)
r
sample(15,1)
?sample
library(sampling)
#A
set.seed(123)
s <- srswor(20, nrow(MU284))
sample.1 <- MU284[rows, ]
sample.1
table(sample.1$REG)
prop.table(MU284$REG)[s != 0]
set.seed(123)
s <- srswor(20, nrow(MU284))
MU284[s,]
sample.1 = MU284[s,]
table(sample.1$REG)
sample.1
table(sample.1$REG)
nrow(MU284)
set.seed(123)
s <- srswor(20, nrow(MU284))
sample.1 = MU284[s != 0,]
table(sample.1$REG)
prop.table(MU284$REG)[s != 0]
prop.table(sample.1$REG)
set.seed(123)
N <- nrow(MU284)
n <- 20
k <- ceiling(N / n)
k
r <- sample(k , 1)
r
s <- seq(r, by = k, length = n)
s
sample.2 <- MU284[s, ]
sample.2
head(sample.2)
table(sample.2$REG)
#cannot get this
prop.table(sample.2$REG)[s != 0 ]
