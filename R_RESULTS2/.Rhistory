panels <- subset(g$layout, name %in% grep('panel',g$layout$name,value = TRUE))
g2 <- gtable_add_grob(g1, grobs=axis, t = unique(panels$t), l=tail(panels$l, -1)-1)
panels <- grep("panel", g2$layout$name)
top <- unique(g2$layout$t[panels])
g2 = g2[-(top-1), ]
grid.newpage()
grid.draw(g2)
p = ggplot(EMCI,
aes(x = Variable, y = Beta, color = sig)) +
geom_point() +
facet_grid(~grp,scales = 'free') +
coord_flip() + theme_classic()+
theme(
legend.position = 'bottom',
axis.text.x = element_text(size = 30,face = 'bold',colour = 'black'),
axis.text.y = element_text(size = 32,face = 'bold',color = 'black'),
title = element_text(size = 16, face = 'bold',color = 'black'))+
geom_errorbar(aes(ymin = lowerCI, ymax=upperCI), width=.3, position=position_dodge(0.05),size = 1.1) +
geom_hline(yintercept = 0,color = 'black',linetype = 2,size = 1.3) +
scale_colour_manual(values = c('black','red')) +
labs(color = "")+ylab('')+xlab('') +emci +theme(legend.position = 'bottom')+
ylim(-.0001,.0005)+scale_y_continuous(breaks = c(0.0000,0.0003,0.0005), labels = c('0','3e-4','5e-4'))+theme(panel.spacing = unit(15, "lines"))
p
p1 = p+theme(axis.title.y=element_blank(),axis.text.y=element_blank(),axis.ticks.y=element_blank())
g <- ggplotGrob(p)
g1 = ggplotGrob(p1)
axis <- gtable_filter(g, "axis-l")[["grobs"]][[1]][["children"]][["axis"]][,1]
g[["grobs"]][[4]][["children"]][["axis"]] <- NULL
panels <- subset(g$layout, name %in% grep('panel',g$layout$name,value = TRUE))
g2 <- gtable_add_grob(g1, grobs=axis, t = unique(panels$t), l=tail(panels$l, -1)-1)
panels <- grep("panel", g2$layout$name)
top <- unique(g2$layout$t[panels])
g2 = g2[-(top-1), ]
grid.newpage()
grid.draw(g2)
p = ggplot(EMCI,
aes(x = Variable, y = Beta, color = sig)) +
geom_point() +
facet_grid(~grp,scales = 'free') +
coord_flip() + theme_classic()+
theme(
legend.position = 'bottom',
axis.text.x = element_text(size = 26,face = 'bold',colour = 'black'),
axis.text.y = element_text(size = 32,face = 'bold',color = 'black'),
title = element_text(size = 16, face = 'bold',color = 'black'))+
geom_errorbar(aes(ymin = lowerCI, ymax=upperCI), width=.3, position=position_dodge(0.05),size = 1.1) +
geom_hline(yintercept = 0,color = 'black',linetype = 2,size = 1.3) +
scale_colour_manual(values = c('black','red')) +
labs(color = "")+ylab('')+xlab('') +emci +theme(legend.position = 'bottom')+
ylim(-.0001,.0005)+scale_y_continuous(breaks = c(0.0000,0.0003,0.0005), labels = c('0','3e-4','5e-4'))+
theme(panel.spacing = unit(15, "lines"))
p
p1 = p+theme(axis.title.y=element_blank(),axis.text.y=element_blank(),axis.ticks.y=element_blank())
g <- ggplotGrob(p)
g1 = ggplotGrob(p1)
axis <- gtable_filter(g, "axis-l")[["grobs"]][[1]][["children"]][["axis"]][,1]
g[["grobs"]][[4]][["children"]][["axis"]] <- NULL
panels <- subset(g$layout, name %in% grep('panel',g$layout$name,value = TRUE))
g2 <- gtable_add_grob(g1, grobs=axis, t = unique(panels$t), l=tail(panels$l, -1)-1)
panels <- grep("panel", g2$layout$name)
top <- unique(g2$layout$t[panels])
g2 = g2[-(top-1), ]
grid.newpage()
grid.draw(g2)
p = ggplot(EMCI,
aes(x = Variable, y = Beta, color = sig)) +
geom_point() +
facet_grid(~grp,scales = 'free') +
coord_flip() + theme_classic()+
theme(
legend.position = 'bottom',
axis.text.x = element_text(size = 26,face = 'bold',colour = 'black'),
axis.text.y = element_text(size = 32,face = 'bold',color = 'black'),
title = element_text(size = 16, face = 'bold',color = 'black'))+
geom_errorbar(aes(ymin = lowerCI, ymax=upperCI), width=.3, position=position_dodge(0.05),size = 1.1) +
geom_hline(yintercept = 0,color = 'black',linetype = 2,size = 1.3) +
scale_colour_manual(values = c('black','red')) +
labs(color = "")+ylab('')+xlab('') +emci +theme(legend.position = 'bottom')+
ylim(-.0001,.0005)+scale_y_continuous(breaks = c(0.0000,0.0003,0.0005), labels = c('0','3e-4','5e-4'))+
theme(panel.spacing = unit(18, "lines"))
p
p1 = p+theme(axis.title.y=element_blank(),axis.text.y=element_blank(),axis.ticks.y=element_blank())
g <- ggplotGrob(p)
g1 = ggplotGrob(p1)
axis <- gtable_filter(g, "axis-l")[["grobs"]][[1]][["children"]][["axis"]][,1]
g[["grobs"]][[4]][["children"]][["axis"]] <- NULL
panels <- subset(g$layout, name %in% grep('panel',g$layout$name,value = TRUE))
g2 <- gtable_add_grob(g1, grobs=axis, t = unique(panels$t), l=tail(panels$l, -1)-1)
panels <- grep("panel", g2$layout$name)
top <- unique(g2$layout$t[panels])
g2 = g2[-(top-1), ]
grid.newpage()
grid.draw(g2)
p = ggplot(EMCI,
aes(x = Variable, y = Beta, color = sig)) +
geom_point() +
facet_grid(~grp,scales = 'free') +
coord_flip() + theme_classic()+
theme(
legend.position = 'bottom',
axis.text.x = element_text(size = 24,face = 'bold',colour = 'black'),
axis.text.y = element_text(size = 32,face = 'bold',color = 'black'),
title = element_text(size = 16, face = 'bold',color = 'black'))+
geom_errorbar(aes(ymin = lowerCI, ymax=upperCI), width=.3, position=position_dodge(0.05),size = 1.1) +
geom_hline(yintercept = 0,color = 'black',linetype = 2,size = 1.3) +
scale_colour_manual(values = c('black','red')) +
labs(color = "")+ylab('')+xlab('') +emci +theme(legend.position = 'bottom')+
ylim(-.0001,.0005)+scale_y_continuous(breaks = c(0.0000,0.0003,0.0005), labels = c('0','3e-4','5e-4'))+
theme(panel.spacing = unit(18, "lines"))
p
p1 = p+theme(axis.title.y=element_blank(),axis.text.y=element_blank(),axis.ticks.y=element_blank())
g <- ggplotGrob(p)
g1 = ggplotGrob(p1)
axis <- gtable_filter(g, "axis-l")[["grobs"]][[1]][["children"]][["axis"]][,1]
g[["grobs"]][[4]][["children"]][["axis"]] <- NULL
panels <- subset(g$layout, name %in% grep('panel',g$layout$name,value = TRUE))
g2 <- gtable_add_grob(g1, grobs=axis, t = unique(panels$t), l=tail(panels$l, -1)-1)
panels <- grep("panel", g2$layout$name)
top <- unique(g2$layout$t[panels])
g2 = g2[-(top-1), ]
grid.newpage()
grid.draw(g2)
p = ggplot(EMCI,
aes(x = Variable, y = Beta, color = sig)) +
geom_point() +
facet_grid(~grp,scales = 'free') +
coord_flip() + theme_classic()+
theme(
legend.position = 'bottom',
axis.text.x = element_text(size = 18,face = 'bold',colour = 'black'),
axis.text.y = element_text(size = 32,face = 'bold',color = 'black'),
title = element_text(size = 16, face = 'bold',color = 'black'))+
geom_errorbar(aes(ymin = lowerCI, ymax=upperCI), width=.3, position=position_dodge(0.05),size = 1.1) +
geom_hline(yintercept = 0,color = 'black',linetype = 2,size = 1.3) +
scale_colour_manual(values = c('black','red')) +
labs(color = "")+ylab('')+xlab('') +emci +theme(legend.position = 'bottom')+
ylim(-.0001,.0005)+scale_y_continuous(breaks = c(0.0000,0.0003,0.0005), labels = c('0','3e-4','5e-4'))+
theme(panel.spacing = unit(18, "lines"))
p
p1 = p+theme(axis.title.y=element_blank(),axis.text.y=element_blank(),axis.ticks.y=element_blank())
g <- ggplotGrob(p)
g1 = ggplotGrob(p1)
axis <- gtable_filter(g, "axis-l")[["grobs"]][[1]][["children"]][["axis"]][,1]
g[["grobs"]][[4]][["children"]][["axis"]] <- NULL
panels <- subset(g$layout, name %in% grep('panel',g$layout$name,value = TRUE))
g2 <- gtable_add_grob(g1, grobs=axis, t = unique(panels$t), l=tail(panels$l, -1)-1)
panels <- grep("panel", g2$layout$name)
top <- unique(g2$layout$t[panels])
g2 = g2[-(top-1), ]
grid.newpage()
grid.draw(g2)
png('gEMCI.png',width = 1400, height = 500)
grid.draw(g2)
dev.off()
p = ggplot(LMCI_mem,
aes(x = Variable, y = Beta, color = sig)) +
geom_point() +
facet_grid(~grp,scales = 'free') +
coord_flip() + theme_classic()+
theme(
legend.position = 'bottom',
axis.text.x = element_text(size = 24,face = 'bold',colour = 'black'),
axis.text.y = element_text(size = 32,face = 'bold',color = 'black'),
title = element_text(size = 16, face = 'bold',color = 'black'))+
geom_errorbar(aes(ymin = lowerCI, ymax=upperCI), width=.3, position=position_dodge(0.05),size = 1.1) +
geom_hline(yintercept = 0,color = 'black',linetype = 2,size = 1.3) +
scale_colour_manual(values = c('black','red')) +
labs(color = "")+ylab('')+xlab('') +lmci +theme(legend.position = 'bottom')+theme(panel.spacing = unit(12, "lines"))+
scale_y_continuous(breaks = c(0.0000,0.0005,0.001), labels = c('0','5e-4','1e-3'))
p
p1 = p+theme(axis.title.y=element_blank(),axis.text.y=element_blank(),axis.ticks.y=element_blank())
g <- ggplotGrob(p)
g1 = ggplotGrob(p1)
axis <- gtable_filter(g, "axis-l")[["grobs"]][[1]][["children"]][["axis"]][,1]
g[["grobs"]][[4]][["children"]][["axis"]] <- NULL
panels <- subset(g$layout, name %in% grep('panel',g$layout$name,value = TRUE))
g2 <- gtable_add_grob(g1, grobs=axis, t = unique(panels$t), l=tail(panels$l, -1)-1)
panels <- grep("panel", g2$layout$name)
top <- unique(g2$layout$t[panels])
g2 = g2[-(top-1), ]
grid.newpage()
grid.draw(g2)
p = ggplot(LMCI_mem,
aes(x = Variable, y = Beta, color = sig)) +
geom_point() +
facet_grid(~grp,scales = 'free') +
coord_flip() + theme_classic()+
theme(
legend.position = 'bottom',
axis.text.x = element_text(size = 24,face = 'bold',colour = 'black'),
axis.text.y = element_text(size = 32,face = 'bold',color = 'black'),
title = element_text(size = 16, face = 'bold',color = 'black'))+
geom_errorbar(aes(ymin = lowerCI, ymax=upperCI), width=.3, position=position_dodge(0.05),size = 1.1) +
geom_hline(yintercept = 0,color = 'black',linetype = 2,size = 1.3) +
scale_colour_manual(values = c('black','red')) +
labs(color = "")+ylab('')+xlab('') +lmci +theme(legend.position = 'bottom')+theme(panel.spacing = unit(18, "lines"))+
scale_y_continuous(breaks = c(0.0000,0.0005,0.001), labels = c('0','5e-4','1e-3'))
p
p1 = p+theme(axis.title.y=element_blank(),axis.text.y=element_blank(),axis.ticks.y=element_blank())
g <- ggplotGrob(p)
g1 = ggplotGrob(p1)
axis <- gtable_filter(g, "axis-l")[["grobs"]][[1]][["children"]][["axis"]][,1]
g[["grobs"]][[4]][["children"]][["axis"]] <- NULL
panels <- subset(g$layout, name %in% grep('panel',g$layout$name,value = TRUE))
g2 <- gtable_add_grob(g1, grobs=axis, t = unique(panels$t), l=tail(panels$l, -1)-1)
panels <- grep("panel", g2$layout$name)
top <- unique(g2$layout$t[panels])
g2 = g2[-(top-1), ]
grid.newpage()
grid.draw(g2)
png('gLMCImem.png',width = 1400, height = 500)
grid.draw(g2)
dev.off()
p = ggplot(LMCI_ef,
aes(x = Variable, y = Beta, color = sig)) +
geom_point() +
facet_grid(~grp,scales = 'free') +
coord_flip() + theme_classic()+
theme(
legend.position = 'bottom',
axis.text.x = element_text(size = 24,face = 'bold',colour = 'black'),
axis.text.y = element_text(size = 30,face = 'bold',color = 'black'),
title = element_text(size = 16, face = 'bold',color = 'black'))+
geom_errorbar(aes(ymin = lowerCI, ymax=upperCI), width=.3, position=position_dodge(0.05),size = 1.1) +
geom_hline(yintercept = 0,color = 'black',linetype = 2,size = 1.3) +
scale_colour_manual(values = c('black','red')) +
labs(color = "")+ylab('')+xlab('') +lmci2 +theme(legend.position = 'bottom')+theme(panel.spacing = unit(18, "lines"))+
scale_y_continuous(breaks = c(0.0000,0.001), labels = c('0','1e-3'))
p
p1 = p+theme(axis.title.y=element_blank(),axis.text.y=element_blank(),axis.ticks.y=element_blank())
g <- ggplotGrob(p)
g1 = ggplotGrob(p1)
axis <- gtable_filter(g, "axis-l")[["grobs"]][[1]][["children"]][["axis"]][,1]
g[["grobs"]][[4]][["children"]][["axis"]] <- NULL
panels <- subset(g$layout, name %in% grep('panel',g$layout$name,value = TRUE))
g2 <- gtable_add_grob(g1, grobs=axis, t = unique(panels$t), l=tail(panels$l, -1)-1)
panels <- grep("panel", g2$layout$name)
top <- unique(g2$layout$t[panels])
g2 = g2[-(top-1), ]
grid.newpage()
grid.draw(g2)
dev.off()
### LMCI MEM
p = ggplot(LMCI_mem,
aes(x = Variable, y = Beta, color = sig)) +
geom_point() +
facet_grid(~grp,scales = 'free') +
coord_flip() + theme_classic()+
theme(
legend.position = 'bottom',
axis.text.x = element_text(size = 24,face = 'bold',colour = 'black'),
axis.text.y = element_text(size = 32,face = 'bold',color = 'black'),
title = element_text(size = 16, face = 'bold',color = 'black'))+
geom_errorbar(aes(ymin = lowerCI, ymax=upperCI), width=.3, position=position_dodge(0.05),size = 1.1) +
geom_hline(yintercept = 0,color = 'black',linetype = 2,size = 1.3) +
scale_colour_manual(values = c('black','red')) +
labs(color = "")+ylab('')+xlab('') +lmci +theme(legend.position = 'bottom')+theme(panel.spacing = unit(18, "lines"))+
scale_y_continuous(breaks = c(0.0000,0.0005,0.001), labels = c('0','5e-4','1e-3'))
p
p1 = p+theme(axis.title.y=element_blank(),axis.text.y=element_blank(),axis.ticks.y=element_blank())
g <- ggplotGrob(p)
g1 = ggplotGrob(p1)
axis <- gtable_filter(g, "axis-l")[["grobs"]][[1]][["children"]][["axis"]][,1]
g[["grobs"]][[4]][["children"]][["axis"]] <- NULL
# build plot & add axis to LHS of left facet
panels <- subset(g$layout, name %in% grep('panel',g$layout$name,value = TRUE))
g2 <- gtable_add_grob(g1, grobs=axis, t = unique(panels$t), l=tail(panels$l, -1)-1)
# Locate the tops of the plot panels
# Locate the tops of the plot panels
panels <- grep("panel", g2$layout$name)
top <- unique(g2$layout$t[panels])
g2 = g2[-(top-1), ]
grid.newpage()
png('gLMCImem.png',width = 1400, height = 500)
grid.draw(g2)
dev.off()
### LMCI EF
p = ggplot(LMCI_ef,
aes(x = Variable, y = Beta, color = sig)) +
geom_point() +
facet_grid(~grp,scales = 'free') +
coord_flip() + theme_classic()+
theme(
legend.position = 'bottom',
axis.text.x = element_text(size = 24,face = 'bold',colour = 'black'),
axis.text.y = element_text(size = 30,face = 'bold',color = 'black'),
title = element_text(size = 16, face = 'bold',color = 'black'))+
geom_errorbar(aes(ymin = lowerCI, ymax=upperCI), width=.3, position=position_dodge(0.05),size = 1.1) +
geom_hline(yintercept = 0,color = 'black',linetype = 2,size = 1.3) +
scale_colour_manual(values = c('black','red')) +
labs(color = "")+ylab('')+xlab('') +lmci2 +theme(legend.position = 'bottom')+theme(panel.spacing = unit(18, "lines"))+
scale_y_continuous(breaks = c(0.0000,0.001), labels = c('0','1e-3'))
p
p1 = p+theme(axis.title.y=element_blank(),axis.text.y=element_blank(),axis.ticks.y=element_blank())
g <- ggplotGrob(p)
g1 = ggplotGrob(p1)
axis <- gtable_filter(g, "axis-l")[["grobs"]][[1]][["children"]][["axis"]][,1]
g[["grobs"]][[4]][["children"]][["axis"]] <- NULL
# build plot & add axis to LHS of left facet
panels <- subset(g$layout, name %in% grep('panel',g$layout$name,value = TRUE))
g2 <- gtable_add_grob(g1, grobs=axis, t = unique(panels$t), l=tail(panels$l, -1)-1)
# Locate the tops of the plot panels
# Locate the tops of the plot panels
panels <- grep("panel", g2$layout$name)
top <- unique(g2$layout$t[panels])
g2 = g2[-(top-1), ]
grid.newpage()
png('gLMCIef.png',width = 1400, height = 500)
grid.draw(g2)
dev.off()
p = ggplot(EMCI,
aes(x = Variable, y = Beta, color = sig)) +
geom_point() +
facet_grid(~grp,scales = 'free') +
coord_flip() + theme_classic()+
theme(
legend.position = 'bottom',
axis.text.x = element_text(size = 18,face = 'bold',colour = 'black'),
axis.text.y = element_text(size = 32,face = 'bold',color = 'black'),
title = element_text(size = 16, face = 'bold',color = 'black'))+
geom_errorbar(aes(ymin = lowerCI, ymax=upperCI), width=.3, position=position_dodge(0.05),size = 1.1) +
geom_hline(yintercept = 0,color = 'black',linetype = 2,size = 1.3) +
scale_colour_manual(values = c('black','red')) +
labs(color = "")+ylab('')+xlab('') +emci +theme(legend.position = 'bottom')+
ylim(-.0001,.0005)+scale_y_continuous(breaks = c(0.0000,0.0003,0.0005), labels = c('0','3e-4','5e-4'))+
theme(panel.spacing = unit(18, "lines"))
p
p1 = p+theme(axis.title.y=element_blank(),axis.text.y=element_blank(),axis.ticks.y=element_blank())
g <- ggplotGrob(p)
g1 = ggplotGrob(p1)
axis <- gtable_filter(g, "axis-l")[["grobs"]][[1]][["children"]][["axis"]][,1]
g[["grobs"]][[4]][["children"]][["axis"]] <- NULL
# build plot & add axis to LHS of left facet
panels <- subset(g$layout, name %in% grep('panel',g$layout$name,value = TRUE))
g2 <- gtable_add_grob(g1, grobs=axis, t = unique(panels$t), l=tail(panels$l, -1)-1)
# Locate the tops of the plot panels
# Locate the tops of the plot panels
panels <- grep("panel", g2$layout$name)
top <- unique(g2$layout$t[panels])
g2 = g2[-(top-1), ]
grid.newpage()
png('gEMCI.png',width = 1200, height = 500)
grid.draw(g2)
dev.off()
### LMCI MEM
p = ggplot(LMCI_mem,
aes(x = Variable, y = Beta, color = sig)) +
geom_point() +
facet_grid(~grp,scales = 'free') +
coord_flip() + theme_classic()+
theme(
legend.position = 'bottom',
axis.text.x = element_text(size = 24,face = 'bold',colour = 'black'),
axis.text.y = element_text(size = 32,face = 'bold',color = 'black'),
title = element_text(size = 16, face = 'bold',color = 'black'))+
geom_errorbar(aes(ymin = lowerCI, ymax=upperCI), width=.3, position=position_dodge(0.05),size = 1.1) +
geom_hline(yintercept = 0,color = 'black',linetype = 2,size = 1.3) +
scale_colour_manual(values = c('black','red')) +
labs(color = "")+ylab('')+xlab('') +lmci +theme(legend.position = 'bottom')+theme(panel.spacing = unit(18, "lines"))+
scale_y_continuous(breaks = c(0.0000,0.0005,0.001), labels = c('0','5e-4','1e-3'))
p
p1 = p+theme(axis.title.y=element_blank(),axis.text.y=element_blank(),axis.ticks.y=element_blank())
g <- ggplotGrob(p)
g1 = ggplotGrob(p1)
axis <- gtable_filter(g, "axis-l")[["grobs"]][[1]][["children"]][["axis"]][,1]
g[["grobs"]][[4]][["children"]][["axis"]] <- NULL
# build plot & add axis to LHS of left facet
panels <- subset(g$layout, name %in% grep('panel',g$layout$name,value = TRUE))
g2 <- gtable_add_grob(g1, grobs=axis, t = unique(panels$t), l=tail(panels$l, -1)-1)
# Locate the tops of the plot panels
# Locate the tops of the plot panels
panels <- grep("panel", g2$layout$name)
top <- unique(g2$layout$t[panels])
g2 = g2[-(top-1), ]
grid.newpage()
png('gLMCImem.png',width = 1200, height = 500)
grid.draw(g2)
dev.off()
### LMCI EF
p = ggplot(LMCI_ef,
aes(x = Variable, y = Beta, color = sig)) +
geom_point() +
facet_grid(~grp,scales = 'free') +
coord_flip() + theme_classic()+
theme(
legend.position = 'bottom',
axis.text.x = element_text(size = 24,face = 'bold',colour = 'black'),
axis.text.y = element_text(size = 30,face = 'bold',color = 'black'),
title = element_text(size = 16, face = 'bold',color = 'black'))+
geom_errorbar(aes(ymin = lowerCI, ymax=upperCI), width=.3, position=position_dodge(0.05),size = 1.1) +
geom_hline(yintercept = 0,color = 'black',linetype = 2,size = 1.3) +
scale_colour_manual(values = c('black','red')) +
labs(color = "")+ylab('')+xlab('') +lmci2 +theme(legend.position = 'bottom')+theme(panel.spacing = unit(18, "lines"))+
scale_y_continuous(breaks = c(0.0000,0.001), labels = c('0','1e-3'))
p
p1 = p+theme(axis.title.y=element_blank(),axis.text.y=element_blank(),axis.ticks.y=element_blank())
g <- ggplotGrob(p)
g1 = ggplotGrob(p1)
axis <- gtable_filter(g, "axis-l")[["grobs"]][[1]][["children"]][["axis"]][,1]
g[["grobs"]][[4]][["children"]][["axis"]] <- NULL
# build plot & add axis to LHS of left facet
panels <- subset(g$layout, name %in% grep('panel',g$layout$name,value = TRUE))
g2 <- gtable_add_grob(g1, grobs=axis, t = unique(panels$t), l=tail(panels$l, -1)-1)
# Locate the tops of the plot panels
# Locate the tops of the plot panels
panels <- grep("panel", g2$layout$name)
top <- unique(g2$layout$t[panels])
g2 = g2[-(top-1), ]
grid.newpage()
png('gLMCIef.png',width = 1200, height = 500)
grid.draw(g2)
dev.off()
p = ggplot(EMCI,
aes(x = Variable, y = Beta, color = sig)) +
geom_point() +
facet_grid(~grp,scales = 'free') +
coord_flip() + theme_classic()+
theme(
legend.position = 'bottom',
axis.text.x = element_text(size = 24,face = 'bold',colour = 'black'),
axis.text.y = element_text(size = 32,face = 'bold',color = 'black'),
title = element_text(size = 16, face = 'bold',color = 'black'))+
geom_errorbar(aes(ymin = lowerCI, ymax=upperCI), width=.3, position=position_dodge(0.05),size = 1.1) +
geom_hline(yintercept = 0,color = 'black',linetype = 2,size = 1.3) +
scale_colour_manual(values = c('black','red')) +
labs(color = "")+ylab('')+xlab('') +emci +theme(legend.position = 'bottom')+
ylim(-.0001,.0005)+scale_y_continuous(breaks = c(0.0000,0.0003,0.0005), labels = c('0','3e-4','5e-4'))+
theme(panel.spacing = unit(18, "lines"))
p
p1 = p+theme(axis.title.y=element_blank(),axis.text.y=element_blank(),axis.ticks.y=element_blank())
g <- ggplotGrob(p)
g1 = ggplotGrob(p1)
axis <- gtable_filter(g, "axis-l")[["grobs"]][[1]][["children"]][["axis"]][,1]
g[["grobs"]][[4]][["children"]][["axis"]] <- NULL
panels <- subset(g$layout, name %in% grep('panel',g$layout$name,value = TRUE))
g2 <- gtable_add_grob(g1, grobs=axis, t = unique(panels$t), l=tail(panels$l, -1)-1)
panels <- grep("panel", g2$layout$name)
top <- unique(g2$layout$t[panels])
g2 = g2[-(top-1), ]
grid.newpage()
grid.draw(g2)
png('gEMCI.png',width = 1200, height = 500)
grid.draw(g2)
dev.off()
### LMCI MEM
p = ggplot(LMCI_mem,
aes(x = Variable, y = Beta, color = sig)) +
geom_point() +
facet_grid(~grp,scales = 'free') +
coord_flip() + theme_classic()+
theme(
legend.position = 'bottom',
axis.text.x = element_text(size = 24,face = 'bold',colour = 'black'),
axis.text.y = element_text(size = 32,face = 'bold',color = 'black'),
title = element_text(size = 16, face = 'bold',color = 'black'))+
geom_errorbar(aes(ymin = lowerCI, ymax=upperCI), width=.3, position=position_dodge(0.05),size = 1.1) +
geom_hline(yintercept = 0,color = 'black',linetype = 2,size = 1.3) +
scale_colour_manual(values = c('black','red')) +
labs(color = "")+ylab('')+xlab('') +lmci +theme(legend.position = 'bottom')+theme(panel.spacing = unit(18, "lines"))+
scale_y_continuous(breaks = c(0.0000,0.0005,0.001), labels = c('0','5e-4','1e-3'))
p
p1 = p+theme(axis.title.y=element_blank(),axis.text.y=element_blank(),axis.ticks.y=element_blank())
g <- ggplotGrob(p)
g1 = ggplotGrob(p1)
axis <- gtable_filter(g, "axis-l")[["grobs"]][[1]][["children"]][["axis"]][,1]
g[["grobs"]][[4]][["children"]][["axis"]] <- NULL
# build plot & add axis to LHS of left facet
panels <- subset(g$layout, name %in% grep('panel',g$layout$name,value = TRUE))
g2 <- gtable_add_grob(g1, grobs=axis, t = unique(panels$t), l=tail(panels$l, -1)-1)
# Locate the tops of the plot panels
# Locate the tops of the plot panels
panels <- grep("panel", g2$layout$name)
top <- unique(g2$layout$t[panels])
g2 = g2[-(top-1), ]
grid.newpage()
png('gLMCImem.png',width = 1200, height = 500)
grid.draw(g2)
dev.off()
### LMCI EF
p = ggplot(LMCI_ef,
aes(x = Variable, y = Beta, color = sig)) +
geom_point() +
facet_grid(~grp,scales = 'free') +
coord_flip() + theme_classic()+
theme(
legend.position = 'bottom',
axis.text.x = element_text(size = 24,face = 'bold',colour = 'black'),
axis.text.y = element_text(size = 30,face = 'bold',color = 'black'),
title = element_text(size = 16, face = 'bold',color = 'black'))+
geom_errorbar(aes(ymin = lowerCI, ymax=upperCI), width=.3, position=position_dodge(0.05),size = 1.1) +
geom_hline(yintercept = 0,color = 'black',linetype = 2,size = 1.3) +
scale_colour_manual(values = c('black','red')) +
labs(color = "")+ylab('')+xlab('') +lmci2 +theme(legend.position = 'bottom')+theme(panel.spacing = unit(18, "lines"))+
scale_y_continuous(breaks = c(0.0000,0.001), labels = c('0','1e-3'))
p
p1 = p+theme(axis.title.y=element_blank(),axis.text.y=element_blank(),axis.ticks.y=element_blank())
g <- ggplotGrob(p)
g1 = ggplotGrob(p1)
axis <- gtable_filter(g, "axis-l")[["grobs"]][[1]][["children"]][["axis"]][,1]
g[["grobs"]][[4]][["children"]][["axis"]] <- NULL
# build plot & add axis to LHS of left facet
panels <- subset(g$layout, name %in% grep('panel',g$layout$name,value = TRUE))
g2 <- gtable_add_grob(g1, grobs=axis, t = unique(panels$t), l=tail(panels$l, -1)-1)
# Locate the tops of the plot panels
# Locate the tops of the plot panels
panels <- grep("panel", g2$layout$name)
top <- unique(g2$layout$t[panels])
g2 = g2[-(top-1), ]
grid.newpage()
png('gLMCIef.png',width = 1200, height = 500)
grid.draw(g2)
dev.off()
